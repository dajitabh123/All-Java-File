

The process of converting data from one data type to another data type is called as "Type Casting".
There are two types of primitive data types type castings. 

1. Implicit Type Casting;
2. Explicit Type Casting;

let's discuss both the type casting one by one;

1. Implicit Type Casting:

The process of converting data from lower data type to higher data type is called as
Implicit Type Casting.

Example:-

byte b=10;
int i = b;
System.out.println(b+" "+i);

Note: Type Checking is the responsibility of compiler and Type Casting is the responsibility of JVM.

A. If we perform any arithmetic operation on primitive data types variables then the result data type will be according to the following formula:
max(int,type1,type2,type3...)

B. According to the above formula the result data type of the above expression will be "int":
max(int,byte,byte) ----->int.

2. Explicit Type Casting;

The process of converting data from higher data type to lower data type is called as Explicit Type Casting.

To perform explicit type casting we have to use the following pattern.
P a = (Q) b;

(Q) â†’ Cast operator
Where P and Q are two primitive data types, where Q must be either same as P or lower than P.

Example :

int i = 10;
byte b = (byte)i;
System.out.println(i+" "+b);
byte b1 = 30;
byte b2 = 30;
byte b = (byte)(b1+b2);
Sytem.out.println(b);

Note:- In java any decimal point number will be by default treated as double.
 